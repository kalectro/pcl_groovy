Fixed a couple of corner cases related to magic handling in XnDeviceSensorProtocol.

From: Roman Donchenko <roman.donchenko@itseez.com>


---
 Source/XnDeviceSensorV2/XnDeviceSensorProtocol.cpp |   22 +++++++++++++-------
 1 file changed, 14 insertions(+), 8 deletions(-)

diff --git a/Source/XnDeviceSensorV2/XnDeviceSensorProtocol.cpp b/Source/XnDeviceSensorV2/XnDeviceSensorProtocol.cpp
index c6ea7bb..8bfb9ac 100644
--- a/Source/XnDeviceSensorV2/XnDeviceSensorProtocol.cpp
+++ b/Source/XnDeviceSensorV2/XnDeviceSensorProtocol.cpp
@@ -101,30 +101,36 @@ XnBool XN_CALLBACK_TYPE XnDeviceSensorProtocolUsbEpCb(XnUChar* pBuffer, XnUInt32
 				// move to next state
 				pCurrState->CurrHeader.nMagic = nMagic;
 				pCurrState->State = XN_PACKET_HEADER;
-				pCurrState->nMissingBytesInState = sizeof(XnSensorProtocolResponseHeader);
+				pCurrState->nMissingBytesInState = sizeof(XnSensorProtocolResponseHeader) - 2;
 				break;
 			}
 
-			while (pBuffer < pBufEnd)
+			pCurrState->nMissingBytesInState = sizeof(XnUInt16);
+
+			while (pBuffer < pBufEnd - 1)
 			{
 				if (nMagic == *(XnUInt16*)(pBuffer))
 				{
 					pCurrState->CurrHeader.nMagic = nMagic;
 					pCurrState->State = XN_PACKET_HEADER;
-					pCurrState->nMissingBytesInState = sizeof(XnSensorProtocolResponseHeader);
+					pCurrState->nMissingBytesInState = sizeof(XnSensorProtocolResponseHeader) - 2;
+					pBuffer += 2;
 					break;
 				}
 				else
 					pBuffer++;
 			}
 
-			if (pBuffer == pBufEnd &&					// magic wasn't found
-				pBuffer[-1] == ((XnUInt8*)&nMagic)[0])	// last byte in buffer is first in magic
+			if (pBuffer == pBufEnd - 1) // magic wasn't found
 			{
-				// mark that we found first one
-				pCurrState->nMissingBytesInState--;
-			}
+				if (pBuffer[0] == ((XnUInt8*)&nMagic)[0]) // last byte in buffer is first in magic
+				{
+					// mark that we found first one
+					pCurrState->nMissingBytesInState--;
+				}
 
+				pBuffer++;
+			}
 			break;
 
 		case XN_PACKET_HEADER:
