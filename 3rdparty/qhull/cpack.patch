--- qhull-2011.1/CMakeLists.txt	2011-04-17 17:38:33.000000000 -0700
+++ qhull-2011.1/CMakeLists.txt	2011-04-25 17:17:13.000000000 -0700
@@ -10,7 +10,7 @@
 # $Id: //main/2011/qhull/CMakeLists.txt#9 $$Change: 1373 $
 # $DateTime: 2011/04/17 22:20:48 $$Author: bbarber $
 
-project(qhull)
+project(qhull C CXX)
 cmake_minimum_required(VERSION 2.6)
 
 # Define qhull_VERSION in CMakeLists.txt, Makefile, qhull-exports.def, and qhull-warn.pri
@@ -41,7 +41,7 @@
 
 message(STATUS)
 message(STATUS "========== qhull Build Information ==========")
-message(STATUS "Build Version: 				   ${qhull_VERSION}")
+message(STATUS "Build Version:           ${qhull_VERSION}")
 message(STATUS "Install Prefix (CMAKE_INSTALL_PREFIX):     ${CMAKE_INSTALL_PREFIX}")
 message(STATUS "Binary Directory (BIN_INSTALL_DIR):        ${BIN_INSTALL_DIR}")
 message(STATUS "Library Directory (LIB_INSTALL_DIR):       ${LIB_INSTALL_DIR}")
@@ -158,21 +158,21 @@
 include_directories(${CMAKE_SOURCE_DIR}/src ${CMAKE_SOURCE_DIR}/src/libqhull)
 
 string(REGEX MATCH "[^.]+" qhull_MAJOR "${qhull_VERSION}")
-if(CMAKE_BUILD_TYPE MATCHES "[dD]ebug")
-    set(qhull_CPP qhullcpp_d)
-    set(qhull_SHARED qhull_d${qhull_MAJOR})
-    set(qhull_STATIC qhullstatic_d)
-    set(qhull_STATICP qhullstatic_pd)
-else()
-    set(qhull_CPP qhullcpp)
-    set(qhull_SHARED qhull${qhull_MAJOR})
-    set(qhull_STATIC qhullstatic)
-    set(qhull_STATICP qhullstatic_p)
-endif()
+set(qhull_CPP_DEBUG qhullcpp_d)
+set(qhull_SHARED_DEBUG qhull_d${qhull_MAJOR})
+set(qhull_STATIC_DEBUG qhullstatic_d)
+set(qhull_STATICP_DEBUG qhullstatic_pd)
+
+set(qhull_CPP qhullcpp)
+set(qhull_SHARED qhull${qhull_MAJOR})
+set(qhull_STATIC qhullstatic)
+set(qhull_STATICP qhullstatic_p)
+
 
 set(
     qhull_TARGETS 
         ${qhull_CPP} ${qhull_SHARED} ${qhull_STATIC} ${qhull_STATICP} 
+        ${qhull_CPP_DEBUG} ${qhull_SHARED_DEBUG} ${qhull_STATIC_DEBUG} ${qhull_STATICP_DEBUG} 
         qhull rbox qconvex qdelaunay qvoronoi qhalf
         user_eg user_eg2 user_eg3
 )
@@ -188,17 +188,34 @@
     COMPILE_DEFINITIONS "qh_QHpointer"
     VERSION ${qhull_VERSION})
 
-#target_link_libraries(${qhull_SHARED} m)
+add_library(${qhull_SHARED_DEBUG} SHARED 
+        ${libqhull_SOURCES}
+        src/libqhull/qhull-exports.def)
+set_target_properties(${qhull_SHARED_DEBUG} PROPERTIES
+    COMPILE_DEFINITIONS "qh_QHpointer"
+    COMPILE_FLAGS ${CMAKE_CXX_FLAGS_DEBUG}
+    VERSION ${qhull_VERSION})
+
+if(UNIX)
+  target_link_libraries(${qhull_SHARED} m)
+  target_link_libraries(${qhull_SHARED_DEBUG} m)
+endif(UNIX)
 
 if(UNIX)
     if(APPLE)
         set_target_properties(${qhull_SHARED} PROPERTIES 
             INSTALL_NAME_DIR "${LIB_INSTALL_DIR}")
+        set_target_properties(${qhull_SHARED_DEBUG} PROPERTIES 
+            INSTALL_NAME_DIR "${LIB_INSTALL_DIR}")
     else()
         set_target_properties(${qhull_SHARED} PROPERTIES 
             INSTALL_RPATH "${LIB_INSTALL_DIR}"
             INSTALL_RPATH_USE_LINK_PATH TRUE
             BUILD_WITH_INSTALL_RPATH FALSE)
+        set_target_properties(${qhull_SHARED_DEBUG} PROPERTIES 
+            INSTALL_RPATH "${LIB_INSTALL_DIR}"
+            INSTALL_RPATH_USE_LINK_PATH TRUE
+            BUILD_WITH_INSTALL_RPATH FALSE)
     endif()
 endif(UNIX)
 
@@ -215,6 +232,24 @@
     COMPILE_DEFINITIONS "qh_QHpointer"
     VERSION ${qhull_VERSION})
 
+add_library(${qhull_STATIC_DEBUG} STATIC ${libqhull_SOURCES})
+set_target_properties(${qhull_STATIC_DEBUG} PROPERTIES
+    VERSION ${qhull_VERSION} 
+    COMPILE_FLAGS ${CMAKE_CXX_FLAGS_DEBUG})
+
+add_library(${qhull_STATICP_DEBUG} STATIC ${libqhull_SOURCES})
+set_target_properties(${qhull_STATICP_DEBUG} PROPERTIES
+    COMPILE_DEFINITIONS "qh_QHpointer"
+    VERSION ${qhull_VERSION} 
+    COMPILE_FLAGS ${CMAKE_CXX_FLAGS_DEBUG})
+
+if(UNIX)
+  target_link_libraries(${qhull_STATIC} m)
+  target_link_libraries(${qhull_STATIC_DEBUG} m)
+  target_link_libraries(${qhull_STATICP} m)
+  target_link_libraries(${qhull_STATICP_DEBUG} m)
+endif(UNIX)
+
 # ---------------------------------------
 # Define C++ static library qhullcpp (qh_QHpointer)
 # ---------------------------------------
@@ -224,6 +259,12 @@
     COMPILE_DEFINITIONS "qh_QHpointer"
     VERSION ${qhull_VERSION})
 
+add_library(${qhull_CPP_DEBUG} STATIC ${libqhullcpp_SOURCES})
+set_target_properties(${qhull_CPP_DEBUG} PROPERTIES
+    COMPILE_DEFINITIONS "qh_QHpointer"
+    VERSION ${qhull_VERSION}
+    COMPILE_FLAGS ${CMAKE_CXX_FLAGS_DEBUG})
+
 # ---------------------------------------
 # Define qhull executables linked to qhullstatic library
 # ---------------------------------------
@@ -320,3 +361,41 @@
 install(FILES ${road_HEADERS} DESTINATION ${INCLUDE_INSTALL_DIR}/road)
 
 install(DIRECTORY html/ DESTINATION ${DOC_INSTALL_DIR})
+
+# RPM
+find_program(RPM_PROGRAM rpm)
+if(EXISTS ${RPM_PROGRAM})
+  list(APPEND CPACK_GENERATOR "RPM")
+endif(EXISTS ${RPM_PROGRAM})
+# DEB
+find_program(DPKG_PROGRAM dpkg)
+if(EXISTS ${DPKG_PROGRAM})
+  list(APPEND CPACK_GENERATOR "DEB")
+endif(EXISTS ${DPKG_PROGRAM})
+# NSIS
+find_program(NSIS_PROGRAM makensis MakeNSIS)
+if(EXISTS ${NSIS_PROGRAM})
+  list(APPEND CPACK_GENERATOR "NSIS")
+endif(EXISTS ${NSIS_PROGRAM})
+# dpkg
+find_program(PACKAGE_MAKER_PROGRAM PackageMaker
+      HINTS /Developer/Applications/Utilities)
+if(EXISTS ${PACKAGE_MAKER_PROGRAM})
+  list(APPEND CPACK_GENERATOR "PackageMaker")
+endif(EXISTS ${PACKAGE_MAKER_PROGRAM})
+
+if(CMAKE_SIZEOF_VOID_P EQUAL 8)
+  set(CPACK_NSIS_PROGRAMFILES "$PROGRAMFILES64")
+else()
+  set(CPACK_NSIS_PROGRAMFILES "$PROGRAMFILES32")
+endif()
+set(CPACK_NSIS_INSTALL_ROOT "${CPACK_NSIS_PROGRAMFILES}")
+set(CPACK_GENERATOR "${CPACK_GENERATOR}")
+set(CPACK_MONOLITHIC_INSTALL 1)
+#set(CPACK_SET_DESTDIR ON)
+include(InstallRequiredSystemLibraries)
+set(CPACK_PACKAGE_CONTACT "Marius Muja")
+#set(CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
+SET(CPACK_PACKAGE_VERSION ${qhull_VERSION})
+SET(CPACK_PACKAGE_VERSION_MAJOR ${qhull_MAJOR})
+include(CPack)
--- qhull-2011.1/src/libqhullcpp/PointCoordinates.cpp	2011-03-16 19:14:56.000000000 -0700
+++ qhull-2011.1/src/libqhullcpp/PointCoordinates.cpp	2011-04-25 17:15:48.000000000 -0700
@@ -11,6 +11,7 @@
 #include "PointCoordinates.h"
 
 #include <iostream>
+#include <iterator>
 
 using std::istream;
 using std::string;
