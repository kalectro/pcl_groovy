IMPORTANT: Please read this through completely before compiling.

1. Download the latest NVIDIA TEGRA ANDROID DEVELOPMENT PACK from here

http://developer.nvidia.com/mobile/tegra-android-development-pack

(tested on: 
http://developer.download.nvidia.com/devzone/mobile/tegra-devpack-1.0-osx-2012-05-09-12749879.dmg (Mac OS X 10.6 and later)
and
http://developer.download.nvidia.com/devzone/mobile/tegra-devpack-1.0-linux-x64-2012-05-09-12749879.run (Ubuntu 10.04 and 12.04)
)

2. Move the entire directory to 

mv OpenNIRecorder ~/NVPACK/TDK_Samples/tegra_android_native_samples_v10p00/sample_apps/

3. 

SEE build_depend.sh and follow the instruction below to build the libraries. 

STEP 1: OPENNI 
run openni_binary/build_openni_script.sh

then use push_libs.sh to install the .so to your device

Please read push_libs.sh for instruction on how to gain read/write access to the filesystem

Then make sure you run the mount command (see push_libs.sh) after every reboot:

adb shell mount -o devmode=0666 -t usbfs none /proc/bus/usb

or simply use the run.sh command provided.

STEP 2: PCL 

run pcl_binary/build_pcl_android.sh

This step sometimes fails and may require you to re-run the script. If the problem persists, please run the cmake-gui command and take away some of the packages that causes conflict (see .sh file for the cmake commands).

STEP 3: OpenCV

cd opencv_binary && ./get_binary.sh

This will download the OpenCV 2.4.2 and automatically extract them to proper locations. 

STEP 4: libpng headers

cd png_binary && get_headers.sh


STEP 4: Eclipse
Now, you shall import the project to your eclipse (must use the eclipse provided by NDK) and you are ready to compile the code with eclipse. 

If you have already imported the project (i.e., svn update), then you need to 'refresh' (press F5) the project again. 

======================
Ne10 supports:
======================
This application also imported the Ne10 (NEON optimized library) for real-time applications. The instructions on howto use these library can be found in the source tree. 

================================
PNG raw image dump with SD Card
================================
By default, the demo application provide a simple interface to dump the fraw frame (RGB image + depth image) to the SD card in PNG format. The files can be read with standard image tools or even MATLAB.  

Please ensure that a 'fast' SD is installed and pre-formatted for the best performance. 

===========================
SD CARD PERMISSION PROBLEM
===========================

run ./fix_sd_permission.sh and that will address the limitation (this script will reboot your machine)! This is only required for the first time installation. 


